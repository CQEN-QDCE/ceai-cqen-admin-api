version: 0.2

env:
  variables:
    GO_VERSION: 1.19

phases:
  install:
    commands:      
      - echo "in the install phase"
      - echo whoami `whoami`
      - wget https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz
      - tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
      - export PATH="/usr/local/go/bin:$PATH" && export GOPATH="$HOME/go" && export PATH="$GOPATH/bin:$PATH"
      # install govulncheck to scan code
      - echo install govulncheck
      - go install golang.org/x/vuln/cmd/govulncheck@latest   
      - cp $GOPATH/bin/govulncheck /usr/local/bin/
      - workdir=`pwd`
      - echo $workdir
      - ls -la 
      - currentphase="install"
  build:
    #[Container] 2022/11/21 18:29:19 [WARN] Run-as user "Linux-user-name" does not exist
    #run-as: Linux-user-name #does not work!    
    on-failure: CONTINUE  
    commands:
      - echo Build started on `date`
      - echo trying to build go project...
      #- pwd
      #- ls -la
      - currentphase="goBuild"
      - go build -o ./ceai ./cmd/cli
      - echo gopath $GOPATH
      # Vulnerability detection using govulncheck
      - which govulncheck
      - echo trying to execute govulncheck on project
      - currentphase="govulncheck"
      # with -json option gave exit code 137 -> out of memory!
      - govulncheck ./...
      - echo after govulncheck...
      #- cd $workdir      
      - pwd
      - ls -la
    finally:
      - echo will continue process even if there are errors...      
      - echo currentphase $currentphase
  post_build:
    commands:
      - echo Build completed on `date`
      - echo list of elements before ending process
      - ls -la   