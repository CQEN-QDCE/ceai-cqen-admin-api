version: 0.2

env:
  variables:
    GO_VERSION: 1.19
    APP_NAME: "ceai-admin-api"
    ECR_REPO_NAME: "ceai-admin-api-codebuild-ecr"    
  secrets-manager:
    KUBECONFIG_FILE: arn:aws:secretsmanager:ca-central-1:131485263174:secret:ceai-admin-api/openshift/kubeconfig-UAtGE2

phases:
  install:
    commands:      
      - echo "in the install phase"
      - echo "about to read Kubeconfig file content"
      - echo $KUBECONFIG_FILE > openshift/kubeconfig
      - wget https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz
      - tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
      - export PATH="/usr/local/go/bin:$PATH" && export GOPATH="$HOME/go" && export PATH="$GOPATH/bin:$PATH"
      # install govulncheck to scan code
      - echo install govulncheck
      - go install golang.org/x/vuln/cmd/govulncheck@latest   
      # docker
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"            
  pre_build:
    commands:
      # Vulnerability detection using govulncheck
      - which govulncheck
      - echo trying to execute govulncheck on project
      - govulncheck -json ./... > govulncheck-scan-results.json
      # login to aws ecr
      - aws ecr get-login-password --region ca-central-1 | docker login --username AWS --password-stdin 131485263174.dkr.ecr.ca-central-1.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - go build -o ./ceai ./cmd/cli
      - echo gopath $GOPATH
      # docker
      - IMAGE_TAG=`echo $CODEBUILD_BUILD_NUMBER`
      - echo IMAGE_TAG $IMAGE_TAG
      - docker container ls
      - docker ps
      - docker images
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $APP_NAME:$IMAGE_TAG .
      - docker tag $APP_NAME:$IMAGE_TAG 131485263174.dkr.ecr.ca-central-1.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - docker ps
      - docker images        
  post_build:
    commands:
      - echo Build completed on `date`
      - echo list of elements before ending process
      - ls -la  
      # docker
      - echo Pushing the Docker image...
      - docker push 131485263174.dkr.ecr.ca-central-1.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG       
      # get results from aws ecr docker image scan
      - cd .aws/workflows
      - chmod 777 scan-image.sh
      - RESULTS_FILENAME=`echo scan-results-$IMAGE_TAG.out`
      - echo RESULTS_FILENAME $RESULTS_FILENAME
      - echo "will try to get the ECR scan image results"
      - ./scan-image.sh $IMAGE_TAG $ECR_REPO_NAME
      - echo CODEBUILD_BUILD_SUCCEEDING $CODEBUILD_BUILD_SUCCEEDING
      - ls -la   
    finally:
      - echo Stop and remove container and images
      - docker rm $APP_NAME:$IMAGE_TAG
      - docker rmi 131485263174.dkr.ecr.ca-central-1.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - docker rmi $APP_NAME:$IMAGE_TAG
      - docker ps
      - docker images            
artifacts:
  files:
    - govulncheck-scan-results.json
    - .aws/workflows/*.out